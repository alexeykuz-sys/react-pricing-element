{"version":3,"sources":["components/UI/Card.js","components/Button/Button.js","components/Button/Toggle.js","components/Button/Views.js","components/Slider/Slider.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","Button","type","Toggle","checked","onCheck","id","onChange","event","isChecked","target","htmlFor","Views","sliderValue","useState","pageview","setPageview","useEffect","Slider","checkValue","rangeval","setRangeval","setSliderValue","colorProgress","setColorProgress","styleInput","background","console","log","min","max","step","defaultValue","style","value","App","setChecked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.748821bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className = {classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './Button.css';\r\nimport Card from '../UI/Card';\r\n\r\n\r\nconst Button = () =>{\r\n\r\n    return (\r\n        <div className='footer-wrapper'>\r\n            <ul className='promise-list'>\r\n                <li>Unlimited websites</li>\r\n                <li>100% data ownership</li>\r\n                <li>Email reports</li>\r\n            </ul>\r\n            <Card type='button' className='trial-btn'>Start my trial</Card>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Toggle.css';\r\nimport Card from '../UI/Card';\r\n\r\nconst Toggle = ({checked, onCheck})=> {\r\n\r\n    const toggleHandler = (event)=>{\r\n        let isChecked = event.target.checked\r\n        onCheck(isChecked);\r\n    }\r\n\r\n    return (\r\n        <div className='toggle-wrapper'>\r\n            <div className='text'>Monthly Billing</div>\r\n            <div className='toggle-switch'>\r\n                <input type=\"checkbox\" id=\"switch\" checked={checked} onChange={toggleHandler} /><label htmlFor=\"switch\">Toggle</label>\r\n            </div>\r\n            <div className='text'>Yearly Billing</div>\r\n            <Card className='discount'>-25%</Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toggle;","import React, {useState, useEffect} from 'react';\r\nimport '../Button/Views.css'\r\n\r\n\r\nconst Views = ({sliderValue}) => {\r\n\r\n    const [pageview, setPageview] = useState('10k')\r\n\r\n    useEffect(() => {\r\n        const viewsList = [\"10k\", \"50k\", \"100k\", \"500k\", \"1M\"];\r\n        setPageview(viewsList[sliderValue]);\r\n    },[sliderValue]);\r\n\r\n    return (  \r\n            <div className='page-views'>\r\n                <p>{pageview} pageviews</p>\r\n            </div>            \r\n    )\r\n}\r\n\r\nexport default Views; ","import React, {useState, useEffect} from 'react';\r\nimport '../Slider/Slider.css'\r\nimport Views from '../Button/Views'\r\n\r\n\r\n\r\nconst Slider = ({checkValue}) => {\r\n\r\n    const [rangeval, setRangeval] = useState('');\r\n    const [sliderValue, setSliderValue] = useState('0')\r\n    const [colorProgress, setColorProgress] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const priceList = ['0', '8', '16', '24', '32'];\r\n        setRangeval(priceList[sliderValue]);\r\n    },[sliderValue]);\r\n\r\n    const rangevalHandler = (event) => {\r\n        setSliderValue(event.target.value)\r\n        setColorProgress((event.target.value / event.target.max) * 100 + '%')\r\n    }\r\n\r\n    const active = 'var(--StrongCyanSliderBackround)';\r\n    const inactive = 'var(--LightGrayishBlueEmptySliderBar)';\r\n    \r\n    const styleInput = {\r\n\r\n        background: `linear-gradient(90deg, ${active} 0% ${colorProgress},   ${inactive} ${colorProgress} 100%)`,\r\n    }\r\n    \r\n\r\n\r\n    console.log(checkValue)\r\n\r\n\r\n    return (\r\n        <div className='slider-wrapper'>\r\n            <Views sliderValue={sliderValue}/>\r\n            <div className='range-slider-value'>${checkValue? (rangeval *12)*0.75 : rangeval}<span>{checkValue? '/year' : '/month'}</span></div>\r\n            <div className='slider-container'>\r\n                <input type=\"range\" min='0' max='4' step='1' defaultValue='0' style={styleInput}  onChange={rangevalHandler} className=\"slider\" id=\"myRange\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider; ","import React, {useState} from 'react'\nimport './App.css';\nimport Card from './components/UI/Card';\nimport Button from './components/Button/Button';\nimport Toggle from './components/Button/Toggle';\nimport Slider from './components/Slider/Slider';\n\nfunction App() {\n\n  const [checked, setChecked] = useState(null)\n  \n  const checkHandler=(isChecked)=>{\n    setChecked(isChecked)\n  }\n\n  return (\n    <div className=\"App\">\n      <Card className='card-body'>\n        <Slider checkValue={checked}/>\n        <Toggle onCheck={checkHandler}/>\n        <Button/>\n      </Card>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className='header-wrapper'>\n    <h1 className='text-header'>Simple, traffic-based pricing</h1>\n    <div className='sub-text'>Sign-up for our 30-day trial. No credit card required.</div>\n    </div>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}